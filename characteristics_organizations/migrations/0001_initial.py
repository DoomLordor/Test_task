# Generated by Django 3.1.2 on 2020-11-17 10:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outside_id', models.IntegerField(verbose_name='outside_id')),
                ('name_type', models.TextField(verbose_name='Тип организации')),
            ],
            options={
                'verbose_name': 'Наименование типа организации',
                'db_table': 'type_organizations_manual',
                'managed': True,
                'unique_together': {('id', 'outside_id', 'name_type')},
            },
        ),
        migrations.CreateModel(
            name='TypeInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outside_id', models.IntegerField(verbose_name='outside_id')),
                ('name_type', models.TextField(verbose_name='Тип учреждения')),
            ],
            options={
                'verbose_name': 'Наименование типа учреждения',
                'db_table': 'type_institutions_manual',
                'managed': True,
                'unique_together': {('id', 'outside_id', 'name_type')},
            },
        ),
        migrations.CreateModel(
            name='StatusRYBPNYBP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outside_id', models.IntegerField(verbose_name='outside_id')),
                ('name_status', models.TextField(verbose_name='Статус РУБПНУБП')),
            ],
            options={
                'verbose_name': 'Наименование статуса РУБПНУБП',
                'db_table': 'status_rybpnybp_manual',
                'managed': True,
                'unique_together': {('id', 'outside_id', 'name_status')},
            },
        ),
        migrations.CreateModel(
            name='StatusEGRUL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outside_id', models.IntegerField(verbose_name='outside_id')),
                ('name_status', models.TextField(verbose_name='Статус ЕГРЮЛ')),
            ],
            options={
                'verbose_name': 'Наименование статуса ЕГРЮЛ',
                'db_table': 'status_egrul_manual',
                'managed': True,
                'unique_together': {('id', 'outside_id', 'name_status')},
            },
        ),
        migrations.CreateModel(
            name='IndustrySpecificTyping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_typing', models.TextField(verbose_name='Отраслевая типизация')),
            ],
            options={
                'verbose_name': 'Наименование отраслевой типизации',
                'db_table': 'industry_specific_typing_manual',
                'managed': True,
                'unique_together': {('id', 'name_typing')},
            },
        ),
        migrations.CreateModel(
            name='HeadByBK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_head_by_bk', models.CharField(db_column='code_head_by_BK', max_length=3, verbose_name='Код главы по БК')),
                ('name_head_by_bk', models.TextField(db_column='name_head_by_BK', verbose_name='Наименование главы по БК')),
            ],
            options={
                'verbose_name': 'Наименование главы по БК',
                'db_table': 'head_by_bk_manual',
                'managed': True,
                'unique_together': {('id', 'code_head_by_bk', 'name_head_by_bk')},
            },
        ),
        migrations.CreateModel(
            name='CharacteristicsOrganization',
            fields=[
                ('id_institutions', models.IntegerField(primary_key=True, serialize=False, verbose_name='Код учреждения')),
                ('name_institutions', models.TextField(verbose_name='Наименование организации')),
                ('inn', models.CharField(db_column='INN', max_length=10, verbose_name='ИНН')),
                ('kpp', models.CharField(db_column='KPP', max_length=9, verbose_name='КПП')),
                ('budget_level', models.IntegerField(choices=[(0, 'Не определен'), (1, 'Федеральный бюджет'), (2, 'Бюджет субъекта Российской Федерации'), (3, 'Местный бюджет'), (4, 'Бюджет городского округа'), (5, 'Бюджет муниципального района'), (6, 'Бюджет городского поселения'), (7, 'Бюджет сельского поселения'), (8, 'Бюджет государственного внебюджетного фонда Российской Федерации'), (9, 'Бюджет Пенсионного фонда Российской Федерации'), (10, 'Бюджет Фонда социального страхования Российской Федерации'), (11, 'Бюджет Федерального фонда обязательного медицинского страхования '), (12, 'Бюджет территориального государственного внебюджетного фонда'), (13, 'Бюджет городского округа с внутригородским делением'), (14, 'Бюджет внутригородского муниципального образования города федерального значения '), (15, 'Бюджет внутригородского района')], default=0)),
                ('head_by_bk', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.headbybk', verbose_name='Код уровня бюджета')),
                ('industry_specific_typing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.industryspecifictyping', verbose_name='Код отраслевой типизации')),
                ('status_egrul', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.statusegrul', verbose_name='Код статуса ЕГРЮЛ')),
                ('status_rybpnybp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.statusrybpnybp', verbose_name='Код статуса РУБПНУБП')),
                ('type_institutions', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.typeinstitution', verbose_name='Код типа учреждения')),
                ('type_organizations', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='characteristics_organizations.typeorganization', verbose_name='Код типа организации')),
            ],
            options={
                'db_table': 'characteristics_organization',
                'ordering': ['id_institutions'],
                'managed': True,
                'unique_together': {('id_institutions', 'name_institutions', 'inn')},
            },
        ),
    ]
